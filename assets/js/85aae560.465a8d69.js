"use strict";(self.webpackChunk_prodigypnp_website=self.webpackChunk_prodigypnp_website||[]).push([[172],{9613:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>f});var o=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),d=s(n),g=r,f=d["".concat(c,".").concat(g)]||d[g]||p[g]||a;return n?o.createElement(f,i(i({ref:t},l),{},{components:n})):o.createElement(f,i({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u[d]="string"==typeof e?e:r,i[1]=u;for(var s=2;s<a;s++)i[s]=n[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},9518:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>u,toc:()=>s});var o=n(1163),r=(n(9496),n(9613));const a={sidebar_position:6,title:"Custom Chat Messages"},i=void 0,u={unversionedId:"chat",id:"chat",title:"Custom Chat Messages",description:"How to do custom chat messages in Prodigy",source:"@site/docs/chat.md",sourceDirName:".",slug:"/chat",permalink:"/docs/chat",draft:!1,editUrl:"https://github.com/ProdigyPNP/PNP-Website/tree/master/docs/chat.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6,title:"Custom Chat Messages"},sidebar:"tutorialSidebar",previous:{title:"Lock/ban a Prodigy account",permalink:"/docs/lock"}},c={},s=[{value:"How to do custom chat messages in Prodigy",id:"how-to-do-custom-chat-messages-in-prodigy",level:2}],l={toc:s},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"how-to-do-custom-chat-messages-in-prodigy"},"How to do custom chat messages in Prodigy"),(0,r.kt)("admonition",{type:"warning"},(0,r.kt)("p",{parentName:"admonition"},"This is patched/doesn't work")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},'_.functions.customChat = function (text) {\n\n    if (_.instance == false) return alert("You need the extension for this.");\n\n    const dialogue = _.instance.prodigy.dialogue.create();\n    dialogue.setText(10);\n    const key = "noot";\n\n    dialogue.eventQueue[0].dialogueData = dialogue.dataProvider.getLegacy(\n        key,\n        dialogue.eventQueue[0].legacyData.index\n    );\n\n    dialogue.eventQueue [0] = Object.assign(\n        {\n            type: undefined,\n            windowPosition: undefined,\n            blockInput: !undefined,\n        },\n        dialogue.eventQueue [0]\n    );\n\n    dialogue.eventQueue[0] = window._.pickBy(dialogue.eventQueue [0], x => x !== undefined);\n    dialogue.closeDialogue(false);\n    dialogue.onClose = function () {};\n\n\n    _.instance.prodigy.notifications.setPaused(true);\n\n\n    function next () {\n        dialogue.current = dialogue.eventQueue.splice(0, dialogue.skipCounter + 1)[dialogue.skipCounter];\n        dialogue.skipCounter = 0;\n\n        if (Object.keys (dialogue.current ?? {}).length > 0) {\n            const item = [dialogue.current.dialogueData.avatar.atlas];\n\n            if (dialogue. currentDialogue?.game) {\n                dialogue.currentDialogue.updateSchema(dialogue. current, item);\n            } else {\n                dialogue.currentDialogue = _.instance.prodigy.open.characterDialogue(\n                    dialogue.current,\n                    next.bind (dialogue),\n                    item\n                );\n            }\n        };\n    }\n\n\n    next();\n};\n\n\n')))}p.isMDXComponent=!0}}]);